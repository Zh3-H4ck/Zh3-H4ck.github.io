<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Zhe'BLog</title><link>https://Zh3-H4ck.github.io/post/</link><description>Recent content in Posts on Zhe'BLog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 15 May 2021 20:49:14 +0800</lastBuildDate><atom:link href="https://Zh3-H4ck.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>2021 dCTF</title><link>https://Zh3-H4ck.github.io/post/2021-dctf/</link><pubDate>Sat, 15 May 2021 20:49:14 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/2021-dctf/</guid><description>https://dctf.dragonsec.si/challenges Simple web（web） 访问http://dctf1-chall-simple-web.westeurope.azurecontainer.io</description></item><item><title>2021 S4CTF</title><link>https://Zh3-H4ck.github.io/post/2021-s4ctf/</link><pubDate>Sun, 25 Apr 2021 19:36:09 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/2021-s4ctf/</guid><description>Baby-XoR 附件给了两个文件分别是 baby_xor.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #!/usr/bin/env python3 # -*- coding: utf-8 -*- from flag import flag def xor(u, v): return &amp;#39;&amp;#39;.join(chr(ord(cu) ^ ord(cv)) for cu, cv in zip(u, v)) u = flag v = flag[1:] + flag[0] enc = open(&amp;#39;flag.enc&amp;#39;, &amp;#39;w&amp;#39;) enc.write(xor(u, v)) enc.close() flag.enc 1 2</description></item><item><title>2021 SecurebugCTF-未完成</title><link>https://Zh3-H4ck.github.io/post/2021-securebugctf/</link><pubDate>Wed, 21 Apr 2021 23:19:15 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/2021-securebugctf/</guid><description>Secret Conversation 附件有两个文件，分别是 main.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 import secrets from Crypto.Cipher import AES from binascii import hexlify, unhexlify previousCt = &amp;#34;&amp;#34;</description></item><item><title>2021 Cybears CTF</title><link>https://Zh3-H4ck.github.io/post/2021cybearsctf/</link><pubDate>Fri, 09 Apr 2021 20:12:02 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/2021cybearsctf/</guid><description>题目 certs 下载CybearsTest.crt，双击打开证书。在详细信息的颁发者中的CN属性，用base64解密后得到flag flag cybears{c3rt_f13ld_0f_dr34mz!} deebee nc连接后，实</description></item><item><title>2021 BlueHens CTF 2021</title><link>https://Zh3-H4ck.github.io/post/2021bluehensctf/</link><pubDate>Tue, 30 Mar 2021 18:24:52 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/2021bluehensctf/</guid><description>题目 标题 类型 watman re 解题 访问该地址 F12查看源码 可以看到页面代码较为简单，主要为一张图片一个whtml还有一个wasm文件，所以这题主要考验wa</description></item><item><title>2021DiceCTF</title><link>https://Zh3-H4ck.github.io/post/2021dicectf/</link><pubDate>Sun, 07 Feb 2021 15:46:44 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/2021dicectf/</guid><description>标题 类型 babymix re 题目 解题 将文件下载后，拖入IDA64后，查看字符串（shift+F12） 选中Correct! Wrap password in dice{} for the flag :) 调转至代码段，F5反</description></item><item><title>2020justCTF</title><link>https://Zh3-H4ck.github.io/post/2020justctf/</link><pubDate>Sun, 31 Jan 2021 12:05:45 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/2020justctf/</guid><description>标题 类型 That&amp;rsquo;s not crypto RE 题目 题解 将文件下载下来后，用uncompyle6将.pyc文件反编译成py文件 1 uncompyle6 checker.pyc &amp;gt;checker.py 生成的checker.py代码如下 1 2</description></item><item><title>Codeql for Vulnerability Goapp</title><link>https://Zh3-H4ck.github.io/post/codeql-for-vulnerability-goapp/</link><pubDate>Wed, 28 Oct 2020 10:46:52 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/codeql-for-vulnerability-goapp/</guid><description>序 今天我们利用codeql分析下“cookie未启用httponly“这类的安全问题，由此加深自己对codeql的使用 分析go程序时必须额外</description></item><item><title>Codeql审计goDemo</title><link>https://Zh3-H4ck.github.io/post/codeql-go/</link><pubDate>Mon, 28 Sep 2020 17:22:32 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/codeql-go/</guid><description>目的 学习codeql，并用其对Vulnerability-goapp进行审计 前期准备 安装codeql 获取codeql-go 安装vscode的</description></item><item><title>Objection插件编写</title><link>https://Zh3-H4ck.github.io/post/objection-plugin/</link><pubDate>Wed, 23 Sep 2020 16:13:24 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/objection-plugin/</guid><description>目的 写一个插件 功能 自动hook加解密的函数 需要哪些关键点 自动hook 自动将参数和返回结果中的byte数组转成字符串 实例分析 简单编写hook以</description></item><item><title>Objection上手</title><link>https://Zh3-H4ck.github.io/post/frida-objection/</link><pubDate>Mon, 21 Sep 2020 17:02:42 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/frida-objection/</guid><description>objection是基于frida的命令行hook工具，已内置了常用的hook方法，通过输入几句命令，可实现各项功能。 安装 需要先安装Frid</description></item><item><title>Burp插件解析probuf</title><link>https://Zh3-H4ck.github.io/post/burp-extension/</link><pubDate>Mon, 21 Sep 2020 16:19:07 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/burp-extension/</guid><description>目的： 通过插件解析probuf的内容。 主要实现功能点 一个标签页，解析填入的内容，protoc 右键菜单，实现框选自动带入标签页</description></item><item><title>apk抓不到包也许是no-proxy在作怪</title><link>https://Zh3-H4ck.github.io/post/android_no_proxy/</link><pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate><guid>https://Zh3-H4ck.github.io/post/android_no_proxy/</guid><description>0x1 开始 有一天交流时抛出一个问题，有没有遇到过apk在网络交互过程中，burpsuite和fiddler等抓包工具，无法抓取数据包，是否知道原</description></item><item><title>Python反编译</title><link>https://Zh3-H4ck.github.io/post/python%E5%8F%8D%E7%BC%96%E8%AF%91/</link><pubDate>Tue, 23 Jun 2020 15:38:10 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/python%E5%8F%8D%E7%BC%96%E8%AF%91/</guid><description>什么是python python是一种解释型、面向对象、动态数据类型的高级程序设计语言 解释型语言和编译型语言的区别 我们编程都是用的高级语言，计</description></item><item><title>2020riftCTF</title><link>https://Zh3-H4ck.github.io/post/2020riftctf/</link><pubDate>Mon, 23 Mar 2020 16:50:05 +0800</pubDate><guid>https://Zh3-H4ck.github.io/post/2020riftctf/</guid><description>0x0 概述 近期在riftCTF上有一道逆向题，涉及到web前端反调试。 题目如下 0x1 开始 下载四个附件后，用游览器打开crackme.html 输入字符</description></item></channel></rss>